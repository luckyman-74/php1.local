<?php
//Реализуем логику добавления комментария
require __DIR__ . '/classes/GuestBook.php';
$gb = new GuestBook(__DIR__ . '/data/gbData.txt');
$newCom = $_POST['newComment'];
/*
$gb->append($newCom); //Вызываем метод append(), передавая в него новый комментарий и добавляем его к базе.
$gb->save(); //Методом save() сохраняем обновленную базу комментариев.*/

/* Так как return $this; возвращает сам себя (объект), с помощью такого подхода можно вызывать методы цепочкой.
Метод append() добавит новую запись и объект вернет себя. Дальше, по цепочке отработает метод save, который
запишет обновленную гостевую книгу. Такую методику называют "текучий интерфейс".
Название придумано Эриком Эвансом и Мартином Фаулером. (взял отсюда: https://ru.wikipedia.org/wiki/Fluent_interface)*/

$gb->append($newCom)->save(); //Реализация цепочки вызовов методов
header('Location: /DZ6_new/'); // Возвращаем на главную.